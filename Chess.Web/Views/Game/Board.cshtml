@using Chess.Domain.Models
@model Chess.Web.Models.GameStateViewModel

<div class="row" id="main-container">
    <div class="col-md-6">
        <div class="board">
            <div>
                @for (var i = 7; i >= 0; i--)
                {
                    var colourModifier = i % 2;
                    var squareColourClass = colourModifier == 1 ? "board-square-white" : "board-square-black";

                    for (var j = 0; j <= 7; j++)
                    {
                        var position = new Position(i, j);
                        <div class="board-square @squareColourClass" id="square-@position.ToString()">
                            @{
                                if (Model.Pieces.ContainsKey(position.ToString()))
                                {
                                    <img src="~/images/@Model.Pieces[position.ToString()].ImageName" alt="" id="piece-@position.ToString()" />
                                }
                            }
                        </div>
                        squareColourClass = squareColourClass.Equals("board-square-white") ? "board-square-black" : "board-square-white";
                    }
                }
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="/lib/jquery-ui/jquery-ui.js"></script>
    <script type="text/javascript">
        var movesArray = new Array();
        debugger;
        @foreach (var pieceId in Model.ValidMoves.Keys)
        {
            @: var squareArray = [];
            for (var i = 0; i < Model.ValidMoves[pieceId].Count; i++)
            {
                @:squareArray.push("#square-" + "@Model.ValidMoves[pieceId][i]");
            }
            @:movesArray.push({ pieces: "#piece-" + "@pieceId", moves: squareArray });
        }
        
        $(document).ready(function() {
            var i;
            for (i = 0; i < movesArray.count; i++) {
                dragAndDropPiece("#main-container", movesArray[i].pieces, movesArray[i].moves);
            }
        });

    </script>
}